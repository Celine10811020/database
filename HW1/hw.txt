//creat tables
CREATE TABLE games(
Game INT NOT NULL,
away CHAR(3) NOT NULL,
home CHAR(3) NOT NULL,
away_score TINYINT,
home_score TINYINT,
Date datetime NOT NULL,
PRIMARY KEY(Game));

CREATE TABLE inning(
Game INT NOT NULL,
Inning CHAR(3) NOT NULL,
Runs TINYINT,
Hits TINYINT,
Errors TINYINT,
PRIMARY KEY (Game, Inning),
FOREIGN KEY (Game)
  REFERENCES games(Game));
  
CREATE TABLE hitters(
Game INT NOT NULL,
Team CHAR(3) NOT NULL,
AB TINYINT,
R TINYINT,
H TINYINT,
RBI TINYINT,
BB TINYINT,
K TINYINT,
num_P TINYINT,
Position VARCHAR(20),
Hitter_Id MEDIUMINT NOT NULL,
PRIMARY KEY (Game, Hitter_Id),
FOREIGN KEY (Game)
  REFERENCES games(Game));
  
CREATE TABLE pitchers(
Game INT NOT NULL,
Team CHAR(3) NOT NULL,
IP FLOAT,
H TINYINT,
R TINYINT,
ER TINYINT,
BB TINYINT,
K TINYINT,
HR TINYINT,
PC_ST VARCHAR(10),
Pitcher_Id MEDIUMINT NOT NULL,
PRIMARY KEY (Game, Pitcher_Id),
FOREIGN KEY (Game)
  REFERENCES games(Game));

CREATE TABLE pitches(
Pitch_Id MEDIUMINT NOT NULL,
Game INT NOT NULL,
EventId SMALLINT NOT NULL,
Num TINYINT NOT NULL,
Inning CHAR(3),
Pitcher VARCHAR(35),
Pitch VARCHAR(50),
_Type VARCHAR(20),
MPH SMALLINT,
PRIMARY KEY (Pitch_Id),
FOREIGN KEY (Game)
  REFERENCES games(Game));
  
CREATE TABLE players(
Id MEDIUMINT NOT NULL,
Name VARCHAR(20),
PRIMARY KEY(Id));


//import csv files
LOAD DATA LOCAL INFILE '/home/sushi/Desktop/games.csv'
INTO TABLE games
FIELDS TERMINATED BY ','
ENCLOSED BY '"' 
LINES TERMINATED BY '\n'
IGNORE 1 ROWS;

LOAD DATA LOCAL INFILE '/home/sushi/Desktop/inning.csv'
INTO TABLE inning
FIELDS TERMINATED BY ','
ENCLOSED BY '"' 
LINES TERMINATED BY '\n'
IGNORE 1 ROWS;

LOAD DATA LOCAL INFILE '/home/sushi/Desktop/hitters.csv'
INTO TABLE hitters
FIELDS TERMINATED BY ','
ENCLOSED BY '"' 
LINES TERMINATED BY '\n'
IGNORE 1 ROWS;

LOAD DATA LOCAL INFILE '/home/sushi/Desktop/pitchers.csv'
INTO TABLE pitchers
FIELDS TERMINATED BY ','
ENCLOSED BY '"' 
LINES TERMINATED BY '\n'
IGNORE 1 ROWS;

LOAD DATA LOCAL INFILE '/home/sushi/Desktop/pitches.csv'
INTO TABLE pitches
FIELDS TERMINATED BY ','
ENCLOSED BY '"' 
LINES TERMINATED BY '\n'
IGNORE 1 ROWS;

LOAD DATA LOCAL INFILE '/home/sushi/Desktop/players.csv'
INTO TABLE players
FIELDS TERMINATED BY ','
ENCLOSED BY '"' 
LINES TERMINATED BY '\n'
IGNORE 1 ROWS;


//query tasks
//1.
SELECT COUNT(*) AS cnt
FROM games
WHERE ABS(away_score - home_score) >= 10;

//2.
SELECT
  Game AS Game,
  CEIL(COUNT(Inning) / 2) AS num_innings
FROM inning
GROUP BY Game
HAVING num_innings = (
  SELECT * FROM (
    SELECT CEIL(COUNT(Inning) / 2) AS temp
    FROM inning
    GROUP BY Game
    ORDER BY temp DESC
    LIMIT 1
  ) AS tmp
)
ORDER BY Game ASC;

//3.
SELECT 
  pitchers.Pitcher_Id AS Pitcher_Id, 
  players.Name AS Pitcher, 
  ROUND(SUM(pitchers.IP), 1) AS tol_innings
FROM pitchers
JOIN players ON pitchers.Pitcher_Id = players.Id
JOIN games ON pitchers.Game = games.Game
WHERE games.Date BETWEEN '2021-04-01' AND '2021-11-30'
GROUP BY pitchers.Pitcher_Id, players.Name
ORDER BY tol_innings DESC
LIMIT 3;

//4.
SELECT
  players.Name AS Hitter,
  ROUND(AVG(hitters.num_P / (hitters.AB + hitters.K + hitters.BB)), 4) AS `avg_P/PA`,
  ROUND(AVG(hitters.AB), 4) AS avg_AB,
  ROUND(AVG(hitters.BB), 4) AS avg_BB,
  ROUND(AVG(hitters.K), 4) AS avg_K,
  SUM(hitters.AB + hitters.K + hitters.BB) AS tol_PA
FROM hitters
JOIN players ON hitters.Hitter_Id = players.Id
WHERE hitters.AB + hitters.K + hitters.BB > 0
GROUP BY hitters.Hitter_Id
HAVING tol_PA >= 20
ORDER BY `avg_P/PA` DESC
LIMIT 3;

//5.
SELECT
  Team,
  The_month,
  MIN(interval_time) AS time_interval
FROM (
  SELECT
    team AS Team,
    DATE_FORMAT(Date, '%Y-%m') AS The_month,
    TIME_FORMAT(TIMEDIFF(date, LAG(date) OVER (PARTITION BY team ORDER BY date)), '%H:%i') AS interval_time
  FROM (
    SELECT 
      home AS team,
      Date AS date
    FROM games
    UNION
    SELECT 
      away AS team,
      Date AS date
    FROM games
  ) AS new_table
) AS newTable
WHERE The_month = (
  SELECT
    DATE_FORMAT(games.Date, '%Y-%m') AS date
  FROM
    games
  GROUP BY
    DATE_FORMAT(games.Date, '%Y-%m')
  ORDER BY
    COUNT(DATE_FORMAT(games.Date, '%Y-%m')) DESC
  LIMIT 1
)
GROUP BY Team, The_month;

//6.
SELECT 
  DISTINCT _Type AS Type
FROM pitches
WHERE _Type NOT IN (
  SELECT _Type
  FROM pitches
  WHERE MPH > 95
)
ORDER BY _Type ASC;

//7.
SELECT
  Team,
  players.Name AS Hitter,
  avg_hit_rate,
  tol_hit,
  win_rate
FROM (
    SELECT
    Team,
    player_id,
    avg_hit_rate,
    tol_hit,
    win_rate
  FROM (
    SELECT 
      team AS Team,
      player_id,
      hitting_rate AS avg_hit_rate,
      total_hit AS tol_hit,
      win_rate,
      ROW_NUMBER() OVER (PARTITION BY team ORDER BY hitting_rate DESC) AS rate_place
    FROM (
      SELECT
        player_id,
        team,
        SUM(AB) AS total_hit,
        ROUND(AVG(hit_rate), 4) AS hitting_rate,
        win_rate
      FROM (
        SELECT 
          H, 
          AB, 
          H / AB AS hit_rate,
          Game,
          Hitter_Id AS player_id,
          new_hitters.Team AS team,
          top_winning_rate_team.winning_rate AS win_rate
        FROM (
          SELECT * 
          FROM hitters
          WHERE 
            AB > 0 AND
            Game IN (
              SELECT Game
              FROM games
              WHERE DATE_FORMAT(games.Date, '%Y') = "2021"
            )
        ) AS new_hitters 
        JOIN (
          SELECT
            team,
            winning_rate
          FROM (
            SELECT 
              team, 
              SUM(CASE WHEN team_score > enemy_score THEN 1 ELSE 0 END) AS total_wins,
              COUNT(*) AS total_games,
              ROUND(SUM(CASE WHEN team_score > enemy_score THEN 1 ELSE 0 END) / COUNT(*), 4) AS winning_rate
            FROM (
              SELECT
                Game AS game_id,
                home AS team,
                home_score AS team_score,
                away_score AS enemy_score
              FROM games
              WHERE DATE_FORMAT(games.Date, '%Y') = "2021"
              UNION ALL
              SELECT 
                Game AS game_id,
                away AS team,
                away_score AS team_score,
                home_score AS enemy_score
              FROM games
              WHERE DATE_FORMAT(games.Date, '%Y') = "2021"
            ) AS new_games_table
            GROUP BY 
              team
            ORDER BY winning_rate DESC
            LIMIT 5
          ) AS top_winning_rate
        ) AS top_winning_rate_team
        ON top_winning_rate_team.team = new_hitters.Team
      ) AS hitters_hitting_rate
      GROUP BY
        player_id, team
      ORDER BY hitting_rate ASC
    ) AS new_table_2
  WHERE 
    hitting_rate IS NOT NULL AND
    total_hit >= 100
  ORDER BY win_rate DESC
  ) AS final_table
WHERE rate_place = 1
) AS really_final_one
JOIN players
ON really_final_one.player_id = players.Id;

//8.
SELECT
  Pitcher,
  cnt,
  `2020_avg_K/9`,
  `2021_avg_K/9`,
  CONCAT(`2020_PC`, '-', `2020_ST`) AS `2020_PC-ST`,
  CONCAT(`2021_PC`, '-', `2021_ST`) AS `2021_PC-ST`
FROM (
  SELECT 
    *
  FROM (
    SELECT
      'Changed' AS Pitcher,
      COUNT(*) AS cnt,
      ROUND(AVG(2020_avg_K_IP), 4) AS `2020_avg_K/9`,
      ROUND(AVG(2020_PC), 4) AS `2020_PC`,
      ROUND(AVG(2020_ST), 4) AS `2020_ST`
    FROM (
      SELECT
        2020_player.Pitcher_id AS Pitcher_id,
        AVG(avg_K_IP) AS 2020_avg_K_IP,
        AVG(PC) AS 2020_PC,
        AVG(ST) AS 2020_ST
      FROM (
        SELECT
          Pitcher_id,
          CAST(SUBSTRING_INDEX(PC_ST, '-', 1) AS UNSIGNED) AS PC,
          CAST(SUBSTRING_INDEX(PC_ST, '-', -1) AS UNSIGNED) AS ST,
          PC_ST,
          K,
          IP,
          9 * K / IP AS avg_K_IP
        FROM
          games
        JOIN
          pitchers
        ON pitchers.Game = games.Game
        WHERE 
          DATE_FORMAT(games.Date, '%Y') = "2020" AND
          Pitcher_id IN (
            SELECT 
              new_two_team_player.Pitcher_Id AS Pitcher_Id
            FROM (
              SELECT DISTINCT
                Pitcher_id
              FROM (
                SELECT
                  Team,
                  team_player.Pitcher_id,
                  ROW_NUMBER() OVER (PARTITION BY Pitcher_id ORDER BY Team ASC) AS team_num
                FROM (
                  SELECT DISTINCT
                    Team,
                    Pitcher_id
                  FROM
                    games
                  JOIN
                    pitchers
                  ON pitchers.Game = games.Game
                  WHERE 
                    (DATE_FORMAT(games.Date, '%Y') = "2020" OR
                    DATE_FORMAT(games.Date, '%Y') = "2021") AND
                    IP > 0
                  ORDER BY Pitcher_Id ASC
                ) AS team_player
              ) AS two_team_player
              WHERE team_num = 2
            ) AS new_two_team_player
            JOIN (
              SELECT DISTINCT
                Pitcher_id
              FROM (
                SELECT
                  player_year.Pitcher_id,
                  date,
                  ROW_NUMBER() OVER (PARTITION BY Pitcher_id ORDER BY date ASC) AS year_num
                FROM (
                  SELECT DISTINCT
                    Pitcher_id,
                    DATE_FORMAT(games.Date, '%Y') AS date
                  FROM
                    games
                  JOIN
                    pitchers
                  ON pitchers.Game = games.Game
                  WHERE 
                    (DATE_FORMAT(games.Date, '%Y') = "2020" OR
                    DATE_FORMAT(games.Date, '%Y') = "2021") AND
                    IP > 0
                  ORDER BY Pitcher_Id ASC
                ) AS player_year
                JOIN (
                  SELECT
                    Pitcher_Id,
                    SUM(IP) AS total_inning
                  FROM
                    pitchers
                  JOIN
                    games
                  ON pitchers.Game = games.Game
                  WHERE 
                    (DATE_FORMAT(games.Date, '%Y') = "2020" OR
                    DATE_FORMAT(games.Date, '%Y') = "2021") AND
                    IP > 0
                  GROUP BY Pitcher_Id
                  HAVING total_inning > 50
                  ORDER BY Pitcher_Id ASC
                ) AS fifty_inning_player
                ON player_year.Pitcher_Id = fifty_inning_player.Pitcher_Id
              ) AS two_year_player
              WHERE year_num = 2
            ) AS new_two_year_player
            ON new_two_team_player.Pitcher_Id = new_two_year_player.Pitcher_Id
          ) AND
          IP > 0
        ORDER BY Pitcher_Id ASC
      ) AS 2020_player
      GROUP BY Pitcher_Id
    ) AS 2020_changed_player
  ) AS 2020_changed_K
  JOIN (
    SELECT
      ROUND(AVG(2021_avg_K_IP), 4) AS `2021_avg_K/9`,
      ROUND(AVG(2021_PC), 4) AS `2021_PC`,
      ROUND(AVG(2021_ST), 4) AS `2021_ST`
    FROM (
      SELECT
        2021_player.Pitcher_id AS Pitcher_id,
        AVG(avg_K_IP) AS 2021_avg_K_IP,
        AVG(PC) AS 2021_PC,
        AVG(ST) AS 2021_ST
      FROM (
        SELECT
          Pitcher_id,
          PC_ST,
          CAST(SUBSTRING_INDEX(PC_ST, '-', 1) AS UNSIGNED) AS PC,
          CAST(SUBSTRING_INDEX(PC_ST, '-', -1) AS UNSIGNED) AS ST,
          K,
          IP,
          9 * K / IP AS avg_K_IP
        FROM
          games
        JOIN
          pitchers
        ON pitchers.Game = games.Game
        WHERE 
          DATE_FORMAT(games.Date, '%Y') = "2021" AND
          Pitcher_id IN (
            SELECT 
              new_two_team_player.Pitcher_Id AS Pitcher_Id
            FROM (
              SELECT DISTINCT
                Pitcher_id
              FROM (
                SELECT
                  Team,
                  team_player.Pitcher_id,
                  ROW_NUMBER() OVER (PARTITION BY Pitcher_id ORDER BY Team ASC) AS team_num
                FROM (
                  SELECT DISTINCT
                    Team,
                    Pitcher_id
                  FROM
                    games
                  JOIN
                    pitchers
                  ON pitchers.Game = games.Game
                  WHERE 
                    (DATE_FORMAT(games.Date, '%Y') = "2020" OR
                    DATE_FORMAT(games.Date, '%Y') = "2021") AND
                    IP > 0
                  ORDER BY Pitcher_Id ASC
                ) AS team_player
              ) AS two_team_player
              WHERE team_num = 2
            ) AS new_two_team_player
            JOIN (
              SELECT DISTINCT
                Pitcher_id
              FROM (
                SELECT
                  player_year.Pitcher_id,
                  date,
                  ROW_NUMBER() OVER (PARTITION BY Pitcher_id ORDER BY date ASC) AS year_num
                FROM (
                  SELECT DISTINCT
                    Pitcher_id,
                    DATE_FORMAT(games.Date, '%Y') AS date
                  FROM
                    games
                  JOIN
                    pitchers
                  ON pitchers.Game = games.Game
                  WHERE 
                    (DATE_FORMAT(games.Date, '%Y') = "2020" OR
                    DATE_FORMAT(games.Date, '%Y') = "2021") AND
                    IP > 0
                  ORDER BY Pitcher_Id ASC
                ) AS player_year
                JOIN (
                  SELECT
                    Pitcher_Id,
                    SUM(IP) AS total_inning
                  FROM
                    pitchers
                  JOIN
                    games
                  ON pitchers.Game = games.Game
                  WHERE 
                    (DATE_FORMAT(games.Date, '%Y') = "2020" OR
                    DATE_FORMAT(games.Date, '%Y') = "2021") AND
                    IP > 0
                  GROUP BY Pitcher_Id
                  HAVING total_inning > 50
                  ORDER BY Pitcher_Id ASC
                ) AS fifty_inning_player
                ON player_year.Pitcher_Id = fifty_inning_player.Pitcher_Id
              ) AS two_year_player
              WHERE year_num = 2
            ) AS new_two_year_player
            ON new_two_team_player.Pitcher_Id = new_two_year_player.Pitcher_Id
          ) AND
          IP > 0
        ORDER BY Pitcher_Id ASC
      ) AS 2021_player
      GROUP BY Pitcher_Id
    ) AS 2021_changed_player
  ) AS 2021_changed_K
  UNION
  SELECT *
  FROM (
    SELECT
      'Unchanged' AS Pitcher,
      COUNT(*) AS cnt,
      ROUND(AVG(2020_avg_K_IP), 4) AS `2020_avg_K/9`,
      ROUND(AVG(2020_PC), 4) AS `2020_PC`,
      ROUND(AVG(2020_ST), 4) AS `2020_ST`
    FROM (
      SELECT
        2020_player.Pitcher_id AS Pitcher_id,
        AVG(avg_K_IP) AS 2020_avg_K_IP,
        AVG(PC) AS 2020_PC,
        AVG(ST) AS 2020_ST
      FROM (
        SELECT
          Pitcher_id,
          PC_ST,
          CAST(SUBSTRING_INDEX(PC_ST, '-', 1) AS UNSIGNED) AS PC,
          CAST(SUBSTRING_INDEX(PC_ST, '-', -1) AS UNSIGNED) AS ST,
          K,
          IP,
          9 * K / IP AS avg_K_IP
        FROM
          games
        JOIN
          pitchers
        ON pitchers.Game = games.Game
        WHERE 
          DATE_FORMAT(games.Date, '%Y') = "2020" AND
          Pitcher_id IN (
            SELECT * 
            FROM (
            SELECT DISTINCT
              Pitcher_id
            FROM (
              SELECT
                player_year.Pitcher_id,
                date,
                ROW_NUMBER() OVER (PARTITION BY Pitcher_id ORDER BY date ASC) AS year_num
              FROM (
                SELECT DISTINCT
                  Pitcher_id,
                  DATE_FORMAT(games.Date, '%Y') AS date
                FROM
                  games
                JOIN
                  pitchers
                ON pitchers.Game = games.Game
                WHERE 
                  (DATE_FORMAT(games.Date, '%Y') = "2020" OR
                  DATE_FORMAT(games.Date, '%Y') = "2021") AND
                  IP > 0
                ORDER BY Pitcher_Id ASC
              ) AS player_year
              JOIN (
                SELECT
                  Pitcher_Id,
                  SUM(IP) AS total_inning
                FROM
                  pitchers
                JOIN
                  games
                ON pitchers.Game = games.Game
                WHERE 
                  (DATE_FORMAT(games.Date, '%Y') = "2020" OR
                  DATE_FORMAT(games.Date, '%Y') = "2021") AND
                  IP > 0
                GROUP BY Pitcher_Id
                HAVING total_inning > 50
                ORDER BY Pitcher_Id ASC
              ) AS fifty_inning_player
              ON player_year.Pitcher_Id = fifty_inning_player.Pitcher_Id
            ) AS two_year_player
            WHERE year_num = 2
          ) AS new_player_list
          WHERE Pitcher_id NOT IN (
            SELECT 
              new_two_team_player.Pitcher_Id AS Pitcher_Id
            FROM (
              SELECT DISTINCT
                Pitcher_id
              FROM (
                SELECT
                  Team,
                  team_player.Pitcher_id,
                  ROW_NUMBER() OVER (PARTITION BY Pitcher_id ORDER BY Team ASC) AS team_num
                FROM (
                  SELECT DISTINCT
                    Team,
                    Pitcher_id
                  FROM
                    games
                  JOIN
                    pitchers
                  ON pitchers.Game = games.Game
                  WHERE 
                    (DATE_FORMAT(games.Date, '%Y') = "2020" OR
                    DATE_FORMAT(games.Date, '%Y') = "2021") AND
                    IP > 0
                  ORDER BY Pitcher_Id ASC
                ) AS team_player
              ) AS two_team_player
              WHERE team_num = 2
            ) AS new_two_team_player
            JOIN (
              SELECT DISTINCT
                Pitcher_id
              FROM (
                SELECT
                  player_year.Pitcher_id,
                  date,
                  ROW_NUMBER() OVER (PARTITION BY Pitcher_id ORDER BY date ASC) AS year_num
                FROM (
                  SELECT DISTINCT
                    Pitcher_id,
                    DATE_FORMAT(games.Date, '%Y') AS date
                  FROM
                    games
                  JOIN
                    pitchers
                  ON pitchers.Game = games.Game
                  WHERE 
                    (DATE_FORMAT(games.Date, '%Y') = "2020" OR
                    DATE_FORMAT(games.Date, '%Y') = "2021") AND
                    IP > 0
                  ORDER BY Pitcher_Id ASC
                ) AS player_year
                JOIN (
                  SELECT
                    Pitcher_Id,
                    SUM(IP) AS total_inning
                  FROM
                    pitchers
                  JOIN
                    games
                  ON pitchers.Game = games.Game
                  WHERE 
                    (DATE_FORMAT(games.Date, '%Y') = "2020" OR
                    DATE_FORMAT(games.Date, '%Y') = "2021") AND
                    IP > 0
                  GROUP BY Pitcher_Id
                  HAVING total_inning > 50
                  ORDER BY Pitcher_Id ASC
                ) AS fifty_inning_player
                ON player_year.Pitcher_Id = fifty_inning_player.Pitcher_Id
              ) AS two_year_player
              WHERE year_num = 2
            ) AS new_two_year_player
            ON new_two_team_player.Pitcher_Id = new_two_year_player.Pitcher_Id
          )
        ) AND
        IP > 0
      ORDER BY Pitcher_Id ASC
      ) AS 2020_player
      GROUP BY Pitcher_Id
    ) AS 2020_changed_player
  ) AS 2020_changed_K
  JOIN (
    SELECT
      ROUND(AVG(2021_avg_K_IP), 4) AS `2021_avg_K/9`,
      ROUND(AVG(2021_PC), 4) AS `2021_PC`,
      ROUND(AVG(2021_ST), 4) AS `2021_ST`
    FROM (
      SELECT
        2021_player.Pitcher_id AS Pitcher_id,
        AVG(avg_K_IP) AS 2021_avg_K_IP,
        AVG(PC) AS 2021_PC,
        AVG(ST) AS 2021_ST
      FROM (
        SELECT
          Pitcher_id,
          PC_ST,
          CAST(SUBSTRING_INDEX(PC_ST, '-', 1) AS UNSIGNED) AS PC,
          CAST(SUBSTRING_INDEX(PC_ST, '-', -1) AS UNSIGNED) AS ST,
          K,
          IP,
          9 * K / IP AS avg_K_IP
        FROM
          games
        JOIN
          pitchers
        ON pitchers.Game = games.Game
        WHERE 
          DATE_FORMAT(games.Date, '%Y') = "2021" AND
          Pitcher_id IN (
            SELECT * 
            FROM (
            SELECT DISTINCT
              Pitcher_id
            FROM (
              SELECT
                player_year.Pitcher_id,
                date,
                ROW_NUMBER() OVER (PARTITION BY Pitcher_id ORDER BY date ASC) AS year_num
              FROM (
                SELECT DISTINCT
                  Pitcher_id,
                  DATE_FORMAT(games.Date, '%Y') AS date
                FROM
                  games
                JOIN
                  pitchers
                ON pitchers.Game = games.Game
                WHERE 
                  (DATE_FORMAT(games.Date, '%Y') = "2020" OR
                  DATE_FORMAT(games.Date, '%Y') = "2021") AND
                  IP > 0
                ORDER BY Pitcher_Id ASC
              ) AS player_year
              JOIN (
                SELECT
                  Pitcher_Id,
                  SUM(IP) AS total_inning
                FROM
                  pitchers
                JOIN
                  games
                ON pitchers.Game = games.Game
                WHERE 
                  (DATE_FORMAT(games.Date, '%Y') = "2020" OR
                  DATE_FORMAT(games.Date, '%Y') = "2021") AND
                  IP > 0
                GROUP BY Pitcher_Id
                HAVING total_inning > 50
                ORDER BY Pitcher_Id ASC
              ) AS fifty_inning_player
              ON player_year.Pitcher_Id = fifty_inning_player.Pitcher_Id
            ) AS two_year_player
            WHERE year_num = 2
          ) AS new_player_list
          WHERE Pitcher_id NOT IN (
            SELECT 
              new_two_team_player.Pitcher_Id AS Pitcher_Id
            FROM (
              SELECT DISTINCT
                Pitcher_id
              FROM (
                SELECT
                  Team,
                  team_player.Pitcher_id,
                  ROW_NUMBER() OVER (PARTITION BY Pitcher_id ORDER BY Team ASC) AS team_num
                FROM (
                  SELECT DISTINCT
                    Team,
                    Pitcher_id
                  FROM
                    games
                  JOIN
                    pitchers
                  ON pitchers.Game = games.Game
                  WHERE 
                    (DATE_FORMAT(games.Date, '%Y') = "2020" OR
                    DATE_FORMAT(games.Date, '%Y') = "2021") AND
                    IP > 0
                  ORDER BY Pitcher_Id ASC
                ) AS team_player
              ) AS two_team_player
              WHERE team_num = 2
            ) AS new_two_team_player
            JOIN (
              SELECT DISTINCT
                Pitcher_id
              FROM (
                SELECT
                  player_year.Pitcher_id,
                  date,
                  ROW_NUMBER() OVER (PARTITION BY Pitcher_id ORDER BY date ASC) AS year_num
                FROM (
                  SELECT DISTINCT
                    Pitcher_id,
                    DATE_FORMAT(games.Date, '%Y') AS date
                  FROM
                    games
                  JOIN
                    pitchers
                  ON pitchers.Game = games.Game
                  WHERE 
                    (DATE_FORMAT(games.Date, '%Y') = "2020" OR
                    DATE_FORMAT(games.Date, '%Y') = "2021") AND
                    IP > 0
                  ORDER BY Pitcher_Id ASC
                ) AS player_year
                JOIN (
                  SELECT
                    Pitcher_Id,
                    SUM(IP) AS total_inning
                  FROM
                    pitchers
                  JOIN
                    games
                  ON pitchers.Game = games.Game
                  WHERE 
                    (DATE_FORMAT(games.Date, '%Y') = "2020" OR
                    DATE_FORMAT(games.Date, '%Y') = "2021") AND
                    IP > 0
                  GROUP BY Pitcher_Id
                  HAVING total_inning > 50
                  ORDER BY Pitcher_Id ASC
                ) AS fifty_inning_player
                ON player_year.Pitcher_Id = fifty_inning_player.Pitcher_Id
              ) AS two_year_player
              WHERE year_num = 2
            ) AS new_two_year_player
            ON new_two_team_player.Pitcher_Id = new_two_year_player.Pitcher_Id
          )
        ) AND
        IP > 0
      ORDER BY Pitcher_Id ASC
      ) AS 2021_player
      GROUP BY Pitcher_Id
    ) AS 2021_changed_player
  ) AS 2021_changed_K
) AS last_final_one;

//9.
SELECT
  diff_hitting_rate AS hit_rate_diff,
  winning_rate AS win_rate
FROM (
  SELECT
    game_id,
    ROUND(diff_hitting_rate, 2) AS diff_hitting_rate,
    win_or_lose,
    AVG(win_or_lose) OVER (ORDER BY diff_hitting_rate DESC ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW) AS winning_rate
  FROM (
    SELECT
      game_id,
      FLOOR(diff_hitting_rate * 100) / 100 AS diff_hitting_rate,
      win_or_lose
    FROM (
      SELECT
        game_id,
        SUM(hit_rate) AS diff_hitting_rate,
        1 AS win_or_lose
      FROM (
        SELECT
          game_id,
          team,
          winner,
          CASE
            WHEN team = winner THEN hitting_rate
            ELSE hitting_rate * -1
          END AS hit_rate
        FROM (
          SELECT
            hitters.Game AS game_id,
            Team AS team,
            winner,
            AVG(H / AB) AS hitting_rate
          FROM
            hitters
          JOIN (
            SELECT 
              Game,
              CASE
                WHEN home_score > away_score THEN home
                WHEN away_score > home_score THEN away
                ELSE 'Tie'
              END AS winner
            FROM games
            WHERE DATE_FORMAT(games.Date, '%Y') = "2021"
          ) AS winner_in_2021
          ON hitters.Game = winner_in_2021.Game
          GROUP BY game_id, team
        ) AS game_and_hitting_rate
      ) AS game_and_diff_hitting_rate
      GROUP BY game_id
      UNION
      SELECT
        game_id,
        SUM(hit_rate) AS diff_hitting_rate,
        0 AS win_or_lose
      FROM (
        SELECT
          game_id,
          team,
          winner,
          CASE
            WHEN team = winner THEN hitting_rate * -1
            ELSE hitting_rate
          END AS hit_rate
        FROM (
          SELECT
            hitters.Game AS game_id,
            Team AS team,
            winner,
            AVG(H / AB) AS hitting_rate
          FROM
            hitters
          JOIN (
            SELECT 
              Game,
              CASE
                WHEN home_score > away_score THEN home
                WHEN away_score > home_score THEN away
                ELSE 'Tie'
              END AS winner
            FROM games
            WHERE DATE_FORMAT(games.Date, '%Y') = "2021"
          ) AS winner_in_2021
          ON hitters.Game = winner_in_2021.Game
          GROUP BY game_id, team
        ) AS game_and_hitting_rate
      ) AS game_and_diff_hitting_rate
      GROUP BY game_id
    ) AS win_or_lose_hitting_rate
    ORDER BY diff_hitting_rate DESC
  ) AS order_by_diff_hitting_rate
) AS final_one
WHERE winning_rate > 0.95
ORDER BY 
  winning_rate ASC, 
  diff_hitting_rate ASC
LIMIT 1;
